name: CI/CD Pipeline

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout кода
      - name: Checkout code
        uses: actions/checkout@v3

      # Настройка Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Установка docker-compose
      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Сборка и запуск сервисов
      - name: Build and start services
        run: |
          docker-compose up -d --build

      # Проверка сервисов
      # - name: Test services
      #   run: |
      #     until docker-compose exec -T bot_db pg_isready -U mirodil -d tvgo_db; do
      #       echo "Waiting for database..."
      #       sleep 5
      #     done
      #     docker-compose exec -T python_bot curl -f http://localhost:8082/health || exit 1
      #     docker-compose exec -T go_tvgo curl -f http://localhost:8083/health || exit 1

      # # Остановка сервисов
      # - name: Stop services
      #   run: |
      #     docker-compose down

deploy:
  needs: build-and-test
  runs-on: ubuntu-latest
  if: github.ref == 'refs/heads/main'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Deploy to server
      run: |
        # Временные значения прямо в коде
        DEPLOY_SERVER="192.168.1.100"  # Замените на ваш IP
        DEPLOY_USER="deploy"           # Замените на вашего пользователя
        DEPLOY_KEY="-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZWQyNTUxOQAAACCd4P6LbS2Ej6DspPIO77Rn57Qok8f/dN1o8g+QGJgS3gAAAKBqxmK/asZivwAAAAtzc2gtZWQyNTUxOQAAACCd4P6LbS2Ej6DspPIO77Rn57Qok8f/dN1o8g+QGJgS3gAAAEDwsFB1SOAO4G0XRDDkUrrIfY1Qv+dbYoPwShaUmSsUOZ3g/ottLYSPoOyk8g7vtGfntCiTx/903WjyD5AYmBLeAAAAHW1pcnNhZGlrb3ZtaXJvZGlsNTJAZ21haWwuY29t-----END OPENSSH PRIVATE KEY-----"

        echo "$DEPLOY_KEY" > deploy_key
        chmod 600 deploy_key
        scp -i deploy_key docker-compose.yml ${DEPLOY_USER}@${DEPLOY_SERVER}:/home/${DEPLOY_USER}/docker-compose.yml
        ssh -i deploy_key ${DEPLOY_USER}@${DEPLOY_SERVER} << 'EOF'
          docker-compose pull
          docker-compose up -d --build
          docker system prune -f
        EOF
        rm deploy_key

