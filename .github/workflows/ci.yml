name: CI/CD Pipeline

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout кода
      - name: Checkout code
        uses: actions/checkout@v3

      # Настройка Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Установка docker-compose
      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Сборка и запуск сервисов
      - name: Build and start services
        run: |
          docker-compose up -d --build

      # Проверка сервисов
      # - name: Test services
      #   run: |
      #     until docker-compose exec -T bot_db pg_isready -U mirodil -d tvgo_db; do
      #       echo "Waiting for database..."
      #       sleep 5
      #     done
      #     docker-compose exec -T python_bot curl -f http://localhost:8082/health || exit 1
      #     docker-compose exec -T go_tvgo curl -f http://localhost:8083/health || exit 1

      # # Остановка сервисов
      # - name: Stop services
      #   run: |
      #     docker-compose down

  deploy:
      needs: build-and-test
      runs-on: ubuntu-latest
      if: github.ref == 'refs/heads/dev'
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Install sshpass
          run: |
            sudo apt-get update
            sudo apt-get install -y sshpass
        - name: Deploy to server
          run: |
            DEPLOY_SERVER="68.183.12.104"
            DEPLOY_USER="root"
            DEPLOY_PASSWORD="5610056Mm"

            echo "Deploying to $DEPLOY_USER@$DEPLOY_SERVER"
            sshpass -p "$DEPLOY_PASSWORD" scp -o StrictHostKeyChecking=no docker-compose.yml ${DEPLOY_USER}@${DEPLOY_SERVER}:/home/${DEPLOY_USER}/docker-compose.yml
            sshpass -p "$DEPLOY_PASSWORD" ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER} << 'EOF'
              docker-compose pull
              docker-compose up -d --build
              docker system prune -f
            EOF

